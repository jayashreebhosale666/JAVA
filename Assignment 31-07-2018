1)Reverse A string

public class ReverseString {
    public static void main(String[] args) 
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter String: ");
        String str=sc.nextLine();
        int len=str.length();
        for(int i=len-1;i>=0;i--)
                {
                    System.out.print(str.charAt(i)+" ");
                }}}
OUTPUT::
Enter String: 
welcome to NIIT
T I I N   o t   e m o c l e w
//-------------------------------------------------------------------------------	
2) Return the number of times that the string "hi" appears anywhere in the given string.

public class CountHi {
    @SuppressWarnings("empty-statement")
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter Sting to find how many 'hi' are available in it:: ");
        String line=sc.nextLine();
   
        int count=0;
  
  for(int i=0;i<line.length();i++){
  
  if ( (line.charAt(i) == 'h') && (line.charAt(i+1) == 'i') )
     count+=1;;
  }
        System.out.println("Count hi::"+count);
}}
OUTPUT::
Enter Sting to find how many 'hi' are available in it:: 
hihi hi
Count hi::3
//-------------------------------------------------------------------------------
3)Occurances of characters in string
package check;

import java.util.Scanner;

public class CharOccurences {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter Sting to find how many 'hi' are available in it:: ");
        String line=sc.nextLine();
   
        int count[]=new int[line.length()];
  for (int i = 0; i < line.length(); i++) {
                count[i]=1;
            }
        int cnt=1;
        int visit[] = new int[line.length()];
  for(int i=0;i<line.length();i++){
      
      for (int j = 0; j < line.length(); j++) {
       if(i!=j && line.charAt(i)==line.charAt(j) && i!=visit[i]) 
       {
           count[i]++;
           visit[i]=j;
       }
      }
  }
  for(int i=0;i<line.length();i++)
            System.out.println(line.charAt(i)+":"+count[i]);
}
}
OUTPUT::
Enter Sting to find how many 'hi' are available in it:: 
hh jj ih
h:1
h:3
 :2
j:2
j:2
 :2
i:1
h:3
//-------------------------------------------------------------------------------
4)/*program:to fill the missing character 
from the string retrive first two characters only display them 
if string lendth is less than 2 then place @ character at missing places 
eg: 
hello -->he
h-->h@
trekking-->tr
*/
package javaapplication1;
import java.io.BufferedReader;
import java.io.InputStreamReader;

public class MissingFill {
    
    /*StringBuilder Fill(StringBuilder str)
    {
        if(str.length()<2)
        str= str.append("@");
        else
             str = (StringBuilder) str.subSequence(0, 2);
        return str;
}
             return str;
    }*/
    public static void main(String[] args) {
        try
        {
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
               
            System.out.println("Enter string you wants to do right trim n fill missing chars:: ");
               // String name=br.readLine();
                StringBuilder  name=new StringBuilder (br.readLine());
                int len=name.length();
                if(len>2)
                    System.out.println(name.subSequence(0, 2));
                else
                {
                    if(len==1)
                    System.out.println(name+"@");
                    else
                       System.out.println("@@");
                }
        }catch(Exception e)
        {
            System.out.println(e);
        }
    }
}
/**
 *Enter string you wants to do right trim n fill missing chars:: 

@@
* Enter string you wants to do right trim n fill missing chars:: 
jayaa
ja
* Enter string you wants to do right trim n fill missing chars:: 
j
j@
 
 */
//-------------------------------------------------------------------------------
5)

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;


public class ArrayStartEnd {
    public static void main(String[] args) throws IOException {
        System.out.print("Enter array size: ");
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        int n,arr[];
        n = Integer.parseInt(br.readLine());
        arr=new int[n];
        for(int i=0;i<n;i++)
        {
           arr[i]=Integer.parseInt(br.readLine());
        }
        
        if(arr[0]==6|| arr[n-1]==6)
            System.out.println("True");
        else
            System.out.println("False");
    }
 
}
/**
OUTPUT::
*1) Enter array size:5
6
1
2
3
4

* 2)
* Enter array size:4
1
2
3
6
True
* 3)
* Enter array size: 4
6
1
2
6

* 4)
* Enter array size: 4
1
2
3
4
False
* 5)
* Enter array size: 4
66
7
67
67
False
* 
 */
 //-------------------------------------------------------------------------------
6)/*Write a prigram to check whether given string is palindrome or not */
package javaapplication1;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintStream;

/**
 *
 * @author jayashree Bhosale
 */
public class Palindrome {
    static PrintStream o=new PrintStream(System.out);
    static BufferedReader br=null;
    public static void main(String[] args) {
        try
        {
            br=new BufferedReader(new InputStreamReader(System.in));
        o.println("Enter String which you wants to check whether it is aplindrome or not???? :: ");

        StringBuilder stringName;
            stringName = new StringBuilder(br.readLine());
            String SN=stringName.toString();

            String reverse=new StringBuilder(stringName.reverse()).toString();


           if(SN.equals(reverse))
               System.out.println("Palindrome: Yes");
            else
               System.out.println("Palindrome: No");
                    
        }catch(Exception e)
        {
            o.println(e);
        }
    }
}
/*
run:
Enter String which you wants to check whether it is aplindrome or not???? :: 
jayashree
Palindrome: No

run:
Enter String which you wants to check whether it is aplindrome or not???? :: 
malayalam
Palindrome: Yes

run:
Enter String which you wants to check whether it is aplindrome or not???? :: 
GeeksforGeeks
Palindrome: No
*/
//-------------------------------------------------------------------------------
7)/*
Java Program to Sort employee details  by their Names in an Alphabetical Order
 */
package javaapplication1;

import java.io.PrintStream;
import java.util.Scanner;

public class TestEmployeeSort {
    String Name,Address;
    int salary;

    void accept()
    {
       Scanner sc=new Scanner(System.in);
       PrintStream o=new PrintStream(System.out);
        
        o.print("Enter name:");
        Name=sc.next();
        o.print("\tEnter address:");
        Address=sc.next();
        o.print("\tEnter salary:");
        salary=sc.nextInt();
    }
    void display()
    {
        System.out.println("\n Name:"+Name+"\t Address:"+Address+"\tSalary:"+salary);
    }

    public TestEmployeeSort sortByName(TestEmployeeSort t1[],int n) 
    {
        TestEmployeeSort temp=new TestEmployeeSort();
     for (int i = 0; i < n; i++) {
               for (int j = i+1; j < n; j++) {
                if(t1[i].Name.compareTo(t1[j].Name)>0)
                {
                    //name swapping
                    temp.Name=t1[i].Name;
                    t1[i].Name=t1[j].Name;
                    t1[j].Name=temp.Name;
                    
                    //address swapping
                      temp.Address=t1[i].Address;
                    t1[i].Address=t1[j].Address;
                    t1[j].Address=temp.Address;
                    //Salary swapping
                    temp.salary=t1[i].salary;
                    t1[i].salary=t1[j].salary;
                    t1[j].salary=temp.salary;
                    
                }}}
        
        return this;
     }
    
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.err.println("How many Employee details You wants to add:: ");
        int n=sc.nextInt();
               TestEmployeeSort t[]=new TestEmployeeSort[n];
               TestEmployeeSort t1=new TestEmployeeSort();

        for (int i = 0; i < n; i++) {
            t[i]=new TestEmployeeSort();
            t[i].accept();   
        }
        t1.sortByName(t, n);
       for (int i = 0; i < n; i++) {
            t[i].display();
        } 
    }
}
/*
OUTPUT::
How many Employee details You wants to add:: 
10
Enter name:jay
	Enter address:pune
	Enter salary:22000
Enter name:kumar
	Enter address:bhor
	Enter salary:22000
Enter name:atul
	Enter address:sinhgad
	Enter salary:22000
Enter name:aishwarya
	Enter address:bombay
	Enter salary:22000
Enter name:megha
	Enter address:delhi
	Enter salary:34000
Enter name:saket
	Enter address:chennai
	Enter salary:53000
Enter name:chetan
	Enter address:Anagar
	Enter salary:70000
Enter name:kiran
	Enter address:baramati
	Enter salary:60000
Enter name:aarti
	Enter address:latur
	Enter salary:55000
Enter name:sunil
	Enter address:lonavala
	Enter salary:90000

 Name:aarti	 Address:latur	Salary:55000

 Name:aishwarya	 Address:bombay	Salary:22000

 Name:atul	 Address:sinhgad	Salary:22000

 Name:chetan	 Address:Anagar	Salary:70000

 Name:jay	 Address:pune	Salary:22000

 Name:kiran	 Address:baramati	Salary:60000

 Name:kumar	 Address:bhor	Salary:22000

 Name:megha	 Address:delhi	Salary:34000

 Name:saket	 Address:chennai	Salary:53000

*/
//-------------------------------------------------------------------------------
8)Display First  non duplicate character
import java.util.Scanner;
public class Non_Repeat {
public static void main(String[] args) {
Scanner sc=new Scanner(System.in);
System.out.println("Enter String: ");
String str=sc.nextLine();
int len=str.length();

for(int i=0;i<len;i++)
{
int count=0;
for (int j = 0; j < len; j++) {
if(i!=j && str.charAt(i)==str.charAt(j))
count++;
}
if(count==0)
{
System.out.println(str.charAt(i));
break;
}     }}}
OUTPUT::
Enter String: 
abcabc zz ad
d
 //-------------------------------------------------------------------------------
9)
//-------------------------------------------------------------------------------
10)
//-------------------------------------------------------------------------------

